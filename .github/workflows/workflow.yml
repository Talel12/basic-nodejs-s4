name: Test Workflow

on:
  push:
    branches:
      - main

env:
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Cache Node.js dependencies
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies if cache miss
      - name: Install Dependencies
        run: npm ci

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Cache Docker layers to speed up the build process
      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Build and Tag Docker Image
        run: |
          docker build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            -t ${{ github.repository }}:${{ env.BUILD_NUMBER }} .
      
      - name: Push Image to Docker Hub
        run: docker push ${{ github.repository }}:${{ env.BUILD_NUMBER }}

      - name: Tag Image as Latest
        run: docker tag ${{ github.repository }}:${{ env.BUILD_NUMBER }} ${{ github.repository }}:latest
      
      - name: Push Latest Tag to Docker Hub
        run: docker push ${{ github.repository }}:latest

  Test-job:
    runs-on: ubuntu-latest
    needs: ["build-and-push"]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker Image from Docker Hub
        run: docker pull ${{ github.repository }}:${{ env.BUILD_NUMBER }}

      - name: Run Tests
        run: docker run ${{ github.repository }}:${{ env.BUILD_NUMBER }} npm test

  Deployment:
    runs-on: ubuntu-latest
    needs: ["Test-job"]
    steps:
      - name: Execute Remote SSH Commands
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: sudo /home/ubuntu/deploy.sh
