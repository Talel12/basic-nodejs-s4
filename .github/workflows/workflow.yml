name: Test Workflow

on:
    push:
        branches:
            - main
    
env:
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
          - name: clone repo to runner
            uses: actions/checkout@v4

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          
          - name: build Image
            run: docker build -t ${{ github.repository }}:${{ env.BUILD_NUMBER }} .
            
          - name: Push Image to Docker Hub
            run: docker push ${{ github.repository }}:${{ env.BUILD_NUMBER }} 

          - name: Tag Image to Latest
            run: docker tag ${{ github.repository }}:${{ env.BUILD_NUMBER }} ${{ github.repository }}:latest
          
          - name: Push Image to Docker Hub
            run: docker push ${{ github.repository }}:latest


    Test-job:
      runs-on: ubuntu-latest
      needs: ["build-and-push"]
      steps:
        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: pull image from Docker Hub
          run: docker pull ${{ github.repository }}

        - name: Run Tests
          run: docker run ${{ github.repository }} npm test

    Deployment: 
      runs-on: ubuntu-latest
      needs: ["Test-job"]
      steps:
        - name: executing remote ssh commands using password
          uses: appleboy/ssh-action@v1.1.0
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.VPS_PASSWORD }}
            script: |
                sudo docker pull ${{ github.repository }}
                sudo docker run -d -p 3001:3001 --name devops-s4-container-temp ${{ github.repository }}
                sleep 5
                sudo docker stop devops-s4-container
                sudo docker rm devops-s4-container
                sudo docker rename devops-s4-container-temp devops-s4-container
                sudo docker images prune